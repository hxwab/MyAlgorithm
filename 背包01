package beibao;

public class Beibao01 {
	/**
	 * 递推关系为tab[i][j]=max(tab[i-1][j],tab[i-1][j-weight[i]]+value[i]);
	 * 其中i 表示第i个物品，j表示该背包目前的容量，tab[][]表示价值
	 * 当第i个物品不加入是tab[i][j]=tab[i-1][j],即容量为j时的前i-1个的最大价值
	 * 当第i个物品加入时tab[i][j]=tab[i-1][j-weight[i]]+value[i],即前i-1个组成容量为j-weight[i]时的最大价值
	 * 
	 * @param weight 重量
	 * @param value  价值
	 * @param total  背包容量
	 * @return
	 */
	public int getMaxValue(int[] weight, int [] value , int total){
		
		int [][] tab = new int[weight.length][total];
		for(int i=weight[0];i<total;i++){
			tab[0][i]=value[0];
		}
		for(int i=1;i<weight.length;i++){
			for(int j=weight[i];j<total;j++){
				tab[i][j]=max(tab[i-1][j],tab[i-1][j-weight[i]]+value[i]);
			}
		}
		
		int Max=0;
		for(int i=0;i<total;i++){
			if(Max <tab[weight.length-1][i]){
				Max=tab[weight.length-1][i];
			}
		}
		
		for(int i=0;i<weight.length;i++){
			for(int j=0;j<total;j++){
				System.out.print(tab[i][j]+" ");
			}
			System.out.println("");
		}
		return Max;
		
	}

	public int max(int a,int b){
		return a>b?a:b;
	}
}
