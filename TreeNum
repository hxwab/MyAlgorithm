package com.leetcode;

import java.util.ArrayList;
import java.util.Iterator;
import java.util.Stack;

/**
 * 
 * @author huangxw
 * 题目描述

输入一颗二叉树和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下
一直到叶结点所经过的结点形成一条路径
 *
 *
 *深度优先
 *1、递归
 *2、非递归
 */

public class TreeKNum {
	
	int sum =0;
	static Stack<Integer> stack = new Stack<Integer>() ;
	
	
	public static void main(String[] args) {
	
		TreeNode t1 = new TreeNode(1);
		TreeNode t2= new TreeNode(2);
		TreeNode t3 = new TreeNode(3);
		t1.left = t2;
		t1.right = t3;
		TreeKNum t = new TreeKNum();
		t.FindPath(t1, 3);
		
		
		
	}	
	
	
	public void FindPath(TreeNode root,int target) {
		
		if(root==null){
			return;
		}
		
		if(root.val==target){
			
			Iterator<Integer> it= stack.iterator();
			while(it.hasNext()){
				System.out.print(it.next()+"-->");
			}
			System.out.println(root.val);
			return ;
		}else if(root.val<target){
			
			stack.push(root.val);
			FindPath(root.right, target-root.val);
			FindPath(root.left, target-root.val);
			stack.pop();
			
		}else{
			return ;
		}
	}
		
}


class TreeNode {
    int val = 0;
    TreeNode left = null;
    TreeNode right = null;

    public TreeNode(int val) {
        this.val = val;

    }
}
